/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    int res=0;
    int helper(TreeNode* root , int &cnt)
    {
        if(root==NULL)
        {
            return 0;
        }
        cnt++;
        int left = helper(root->left , cnt);
        int right = helper(root->right , cnt);
        return root->val+left+right;
    }
    void helper2(TreeNode* root)
    {
        if(root==NULL)
        {
            return;
        }
        int cnt=0;
        int avg = helper(root , cnt)/cnt;
        if(avg==root->val)
        {
            res++;
        }
        helper2(root->left);
        helper2(root->right);
    }
public:
    int averageOfSubtree(TreeNode* root) {
        helper2(root);
        return res;
    }
};
