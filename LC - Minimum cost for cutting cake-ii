long long n1 = hC.size(), n2 = vC.size();
        long long cost = 0;
        long long h = 1 , v =1;
        priority_queue<pair<long long, char>> pq;
        for(int i=0; i<n1; i++)
        {
            pq.push({hC[i] , 'h'});
        }
        for(int i=0; i<n2; i++)
        {
            pq.push({vC[i] , 'v'});
        }
        while(!pq.empty())
        {
            int curcost = pq.top().first;
            int curr = pq.top().second;
            pq.pop();
            if(curr=='v')
            {
                v++;
                cost += curcost*h;
            }
            else
            {
                h++;
                cost += curcost*v;
            }
        }
        return cost;
