class Solution {
public:
    void dfs(vector<vector<int>> &adj , int source , int des , vector<bool> &vis, int n)
    {
        vis[source] = true;
        for(auto i: adj[source])
        {
            if(vis[i]==0)
            {
                dfs(adj , i , des , vis , n);
            }
        }
    }
    bool validPath(int n, vector<vector<int>>& edges, int source, int destination) {
        vector<bool> vis(n, 0);
        vector<vector<int>> adj(n+1);
        for(auto i: edges)
        {
            adj[i[0]].push_back(i[1]);
            adj[i[1]].push_back(i[0]);
        }
        dfs(adj , source , destination, vis , n);
        if(vis[destination]==true)
        {
            return true;
        }
        return false;
    }
};
