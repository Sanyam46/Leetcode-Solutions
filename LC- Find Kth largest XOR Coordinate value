class Solution {
public:
    int kthLargestValue(vector<vector<int>>& matrix, int k) 
    {
        int m=matrix.size();
        int n=matrix[0].size();
        vector<vector<int>> pre(m , vector<int>(n));
        priority_queue<int, vector<int> , greater<int>> pq;
        for(int i=0; i<m; i++)
        {
            for(int j=0; j<n; j++)
            {
                if(i>0 and j>0)
                {
                    pre[i][j] = pre[i-1][j-1]^pre[i-1][j]^pre[i][j-1]^matrix[i][j];
                }
                else if(i==0 and j==0)
                {
                    pre[i][j] = matrix[i][j];
                }
                else if(i>0 and j==0)
                {
                    pre[i][j] = matrix[i][j]^pre[i-1][j];
                }
                else
                {
                    pre[i][j] = pre[i][j-1]^matrix[i][j];
                }
            }
        }
        for(int i=0; i<m; i++)
        {
            for(int j=0; j<n; j++)
            {
                pq.push(pre[i][j]);
                if(pq.size()>k)
                {
                    pq.pop();
                }
            }
        }
        return pq.top();
    }
};
