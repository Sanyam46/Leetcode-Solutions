class Solution {
public:
    int minTrioDegree(int n, vector<vector<int>>& edges) {
        int res = INT_MAX;
        vector<vector<int>> graph(n+1, vector<int> (n+1, 0));
        vector<int> deg(n+1, 0);
        for(int i=0; i<edges.size(); i++)
        {
            graph[edges[i][0]][edges[i][1]]++;
            graph[edges[i][1]][edges[i][0]]++;
            deg[edges[i][0]]++;
            deg[edges[i][1]]++;
        }
        for(int i=1; i<=n; i++)
        {
            for(int j=i+1; j<=n; j++)
            {
                for(int k=j+1; k<=n; k++)
                {
                    if(graph[i][j]>0 and graph[j][k]>0 and graph[i][k]>0)
                    {
                        int op1 = deg[i]+deg[j]+deg[k]-6;
                        res = min(res , op1);
                    }
                }
            }
        }
        if(res != INT_MAX)
        {
            return res;
        }
        return -1;
    }
};
